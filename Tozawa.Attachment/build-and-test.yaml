steps:
-   task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
        includePreviewVersions: false
        packageType: sdk
        version: 6.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
-   task: DotNetCoreCLI@2
    displayName: 'restore: solution'
    inputs:
        command: restore
        projects: '$(workingDirectory)/*.sln'
        vstsFeed: '062b0765-3ccc-41e4-a602-31f8d37d00cf'
-   task: DotNetCoreCLI@2
    displayName: 'build: solution'
    inputs:
        command: build
        projects: '$(workingDirectory)/*.sln'
        arguments: '--no-restore'
-   task: FileTransform@1
    displayName: 'svc: file transform'
    inputs:
        folderPath:  '$(AppBuild.Attachment.Svc.Path)'
        targetFiles: '**/appsettings.json'
-   task: DotNetCoreCLI@2
    displayName: 'test: run'
    inputs:
        command: test
        projects: '$(workingDirectory)/test/**/*.csproj'
        arguments: '--no-restore'
-   task: DotNetCoreCLI@2
    displayName: 'publish: service'
    inputs:
        command: publish
        publishWebProjects: false
        projects: '$(workingDirectory)/src/$(App.Solution.Name).Svc/*.csproj'
        arguments: '--output $(build.artifactstagingdirectory) --no-restore'
        zipAfterPublish: True
-   task: CopyFiles@2
    displayName: 'copy: infrastructure'
    inputs:
        SourceFolder: '$(workingDirectory)/infrastructure'
        TargetFolder: '$(build.artifactstagingdirectory)/infrastructure'
-   task: CopyFiles@2
    displayName: "copy migrationscript"
    inputs:
        Contents: "$(workingDirectory)/**/*.migration.sql"
        flattenFolders: true
        TargetFolder: "$(build.artifactstagingdirectory)/migrationscript"
-   task: PublishBuildArtifacts@1
    displayName: 'artifacts: solution'
    inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
-   task: CopyFiles@2
    displayName: "copy migrationscript"
    inputs:
        Contents: "$(workingDirectory)/**/*.migration.sql"
        flattenFolders: true
        TargetFolder: "$(build.artifactstagingdirectory)/migrationscript"
-   task: PublishBuildArtifacts@1
    displayName: 'artifacts: infrastructure'
    inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/infrastructure'
