// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tozawa.Attachment.Svc.Context;

#nullable disable

namespace Tozawa.Attachment.Svc.Migrations
{
    [DbContext(typeof(AttachmentContext))]
    partial class AttachmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Attachment")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.ConvertedOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ConvertedOwners", "Attachment");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.FileAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlobId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileAttachmentType")
                        .HasColumnType("int");

                    b.Property<string>("MetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiniatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BlobId");

                    b.ToTable("FileAttachments", "Attachment");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.ImageArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<Guid>("ImageInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PathData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageInformationId");

                    b.ToTable("ImageArea", "Attachment");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.ImageInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EditorBlobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileAttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("FileAttachmentId");

                    b.ToTable("ImagesInformation", "Attachment");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.OwnerFileAttachment", b =>
                {
                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileAttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OwnerId", "FileAttachmentId");

                    b.HasIndex("FileAttachmentId");

                    b.ToTable("OwnerFileAttachments", "Attachment");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.ImageArea", b =>
                {
                    b.HasOne("Tozawa.Attachment.Svc.Context.Models.ImageInformation", "ImageInformation")
                        .WithMany("Areas")
                        .HasForeignKey("ImageInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageInformation");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.ImageInformation", b =>
                {
                    b.HasOne("Tozawa.Attachment.Svc.Context.Models.FileAttachment", "FileAttachment")
                        .WithMany()
                        .HasForeignKey("FileAttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileAttachment");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.OwnerFileAttachment", b =>
                {
                    b.HasOne("Tozawa.Attachment.Svc.Context.Models.FileAttachment", "FileAttachment")
                        .WithMany("Owners")
                        .HasForeignKey("FileAttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileAttachment");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.FileAttachment", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("Tozawa.Attachment.Svc.Context.Models.ImageInformation", b =>
                {
                    b.Navigation("Areas");
                });
#pragma warning restore 612, 618
        }
    }
}
