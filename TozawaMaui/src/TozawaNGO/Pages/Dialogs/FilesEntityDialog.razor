@namespace TozawaNGO.Pages
@using ShareRazorClassLibrary.Helpers
@using ShareRazorClassLibrary.Models.Dtos
@using ShareRazorClassLibrary.Models.Enums
@using TozawaNGO.Shared
@inherits BaseDialog<FilesEntityDialog>

<style>
    .tz-mud-overlay {
        background: repeating-linear-gradient(135deg, #ccc, #ccc 10px, #aaa 10px, #aaa 20px) !important;
        opacity: 0.7 !important;
    }

    .mud-tooltip-root {
        margin-right: 5px;
    }

    .mud-select:has(.tzSelect) {
        max-width: 25%;
    }
</style>

<ErrorHandling  TCategoryName=@typeof(FilesEntityDialog)>
    <ChildContent>
        <div style="@($"{_disableAttrString}")">
    <MudDialog Style="max-height: 100%;" Class="@($"tzModal")">
        <TitleContent>
            <MudText Color=Color.Secondary>
                @Entity.Email
            </MudText>
        </TitleContent>
        <DialogContent>
            @if (!string.IsNullOrEmpty(_error) && showAlert)
            {
                <MudAlert Severity="Severity.Error" ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(false))"
                    Variant="Variant.Filled" Dense="true" Class="my-2">@_error</MudAlert>
            }
                <MudTable RowStyleFunc="@_disableRowClick" RowsPerPage="20" Breakpoint="Breakpoint.Xs" Style="background-color: gold;overflow: auto; opacity: 0.9;"
                    T="FileAttachmentDto" ServerData="ServerReload" @ref="_table" Striped="true" RowClassFunc="@SelectedRowClassFunc" CustomHeader="true"
                    Dense="true" Hover="true" OnRowClick="RowClickEvent"
                    @bind-SelectedItem="_selectedItem" RowClass="cursor-pointer">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6" Color="Color.Secondary">
                            <SystemText TextId="@SystemTextId.Files" FallbackText="Files"></SystemText>: @Entity.AttachmentsCount
                        </MudText>
                        <MudSpacer />
                        <MudTextField Disabled="@(_disabledPage)" T="string" DebounceInterval="500" Margin="Margin.Dense"
                            @bind-Value="_searchString" OnDebounceIntervalElapsed="s => OnSearch(s)"
                            AdornmentColor="Color.Secondary" Placeholder="@Translate(SystemTextId.SearchText)"
                            Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
                            Class="mt-0">
                        </MudTextField>
                    </ToolBarContent>
                    <ColGroup>
                        <MudHidden Breakpoint="Breakpoint.Xs">
                            <col style="width: 10%;" />
                            <col style="width: 30%;" />
                            <col style="width: 20%;" />
                            <col style="width: 20%;" />
                            <col style="width: 15%;" />
                            <col style="width: 5%;" />
                        </MudHidden>
                    </ColGroup>
                    <HeaderContent>
                        <MudTh>
                            <MudIcon Icon="@Icons.Material.Filled.CloudDownload"></MudIcon>
                        </MudTh>
                        <MudTh>
                            <MudIcon Icon="@Icons.Material.Filled.AttachFile"></MudIcon>
                        </MudTh>
                        <MudTh>
                            <SystemText TextId="@SystemTextId.Name" FallbackText="Name">
                            </SystemText>
                        </MudTh>
                        <MudTh>
                            <SystemText TextId="@SystemTextId.AttachmentType" FallbackText="Attachment type"></SystemText>
                        </MudTh>
                        <MudTh>
                            <SystemText TextId="@SystemTextId.Filesize" FallbackText="Filesize">
                            </SystemText>
                        </MudTh>
                        <MudTh>
                            <SystemText TextId="@SystemTextId.Delete" FallbackText="Delete">
                            </SystemText>
                        </MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="@(GetLabel(SystemTextId.Download, "Download"))">
                            <MudTooltip ShowOnHover=@(!string.IsNullOrEmpty(Translate(SystemTextId.Download, "Download")))
                                Placement="Placement.Top" Arrow="true" Color="Color.Primary">
                                <ChildContent>
                                    <MudIconButton Disabled="@(_disabledPage)"
                                        Icon="@Icons.Material.Filled.Download" @onclick="() => Download(context)">
                                    </MudIconButton>
                                </ChildContent>
                                <TooltipContent>
                                    <MudText>
                                        @Translate(SystemTextId.Download, "Download");
                                    </MudText>
                                </TooltipContent>
                            </MudTooltip>
                        </MudTd>
                        <MudTd DataLabel="@(GetLabel(SystemTextId.File, "File"))">
                            @if (!string.IsNullOrEmpty(context.MiniatureBlobUrl))
                            {
                                var thumb = "data:image/png;base64," + context.MiniatureBlobUrl;
                                <MudTooltip Disabled="@(_disabledPage)">
                                    <ChildContent>
                                        <img @onclick="@(() => ShowDocumentInFrame(context))" src="@thumb"
                                            height="@_thumbnailSize" width="@_thumbnailSize" />
                                    </ChildContent>
                                    <TooltipContent>
                                        <img src="@thumb" />
                                    </TooltipContent>
                                </MudTooltip>
                            }
                            else
                            {
                                <MudIconButton Disabled="@(_disabledPage)" @onclick="@(() => ShowDocumentInFrame(context))"
                                    Icon=@GetFileTypeIcon(context)>
                                </MudIconButton>
                                @if (showSelect.Count > 0 && showSelect.First().Key == context.Id && showSelect.First().Value)
                                {
                                    <div class="d-flex flex-row flex-grow-1 gap-4">
                                        <MudButton @onclick="@(() => ConvertToPdf(context, "view"))" Variant="Variant.Text"
                                            Color="Color.Primary">@Translate(SystemTextId.ViewAsPdf)
                                        </MudButton>

                                        <MudButton @onclick="@(() => ConvertToPdf(context, "download"))" Variant="Variant.Text"
                                            Color="Color.Secondary">
                                            @Translate(SystemTextId.DownloadAsPdf)</MudButton>
                                    </div>
                                }
                            }
                        </MudTd>
                        <MudTd DataLabel="@(GetLabel(SystemTextId.Name, "Name"))">@context.Name</MudTd>
                        <MudTd DataLabel="@(GetLabel(SystemTextId.AttachmentType, "File type"))">
                            @context.FileAttachmentType
                        </MudTd>
                        <MudTd DataLabel="@(GetLabel(SystemTextId.Filesize, "Size"))">@(Math.Round(context.Size / 1000,
                        2))kb
                        </MudTd>
                        <MudTd DataLabel="@(GetLabel(SystemTextId.Delete, "Delete"))">
                            <MudIconButton Disabled="@(_disabledPage || DisabledDelete(context) || DisabledUploadFiles())"
                                Icon="@Icons.Material.Filled.Delete" @onclick="() => Delete(context)"></MudIconButton>
                        </MudTd>
                    </RowTemplate>
            <NoRecordsContent>
                @if(!_RequestInProgress) 
                    {
                 <MudText>
                <SystemText TextId=SystemTextId.NoMachingRecords FallbackText="No matching records found" />
             </MudText>
                    }
        </NoRecordsContent>
        <LoadingContent>
            <MudText>
                <SystemText TextId=SystemTextId.Loading FallbackText="Loading" />
            </MudText>
        </LoadingContent>
        <PagerContent>
            <MudTablePager Class="pa-4" PageSizeOptions="@_pageSizeOptions"
                RowsPerPageString="@(Translate(SystemTextId.RowsPerPage, "Rows per page"))" />
        </PagerContent>
                </MudTable>
        </DialogContent>
        <DialogActions>
            <div class="d-flex flex-row-reverse flex-grow-1 gap-4">
                <MudButton StartIcon="@Icons.Material.Filled.Close" Disabled="@(_disabledPage)"
                    Color="Color.Primary" OnClick="Add" Variant="Variant.Filled">
                    <SystemText TextId="@SystemTextId.Close" FallbackText="Close"></SystemText>
                </MudButton>
                <MudButton Disabled="@(_disabledPage || DisabledUploadFiles())" HtmlTag="label" Variant="Variant.Filled"
                    Color="Color.Secondary" StartIcon="@Icons.Material.Filled.CloudUpload" for="fileInput">
                    <MudText>
                        <SystemText TextId="@SystemTextId.FileUpload" FallbackText="Upload files"></SystemText>
                    </MudText>
                </MudButton>
                <MudSelect Variant="Variant.Filled" Disabled="@(_disabledPage)" Class="tzSelect"
                    @bind-Value="_attachmentType" AnchorOrigin="Origin.BottomCenter"
                    Placeholder="Select an attachment type">
                    @foreach (AttachmentType item in Enum.GetValues(typeof(AttachmentType)))
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>
                <InputFile id="fileInput" accept="@FileValidator._validContentTypes" OnChange="UploadFiles" hidden
                    multiple />
            </div>
        </DialogActions>
    </MudDialog>
</div>
    </ChildContent>
    <ErrorContent Context="ex">
        @string.Empty
    </ErrorContent>
</ErrorHandling>

@if (_RequestInProgress)
{
    <ModalLoading />
}
