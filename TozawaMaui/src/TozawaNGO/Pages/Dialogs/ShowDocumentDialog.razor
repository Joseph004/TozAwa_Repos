@namespace TozawaNGO.Pages
@using ShareRazorClassLibrary.Helpers
@using TozawaNGO.Shared
@using TozawaNGO.Helpers
@inherits BaseDialog<ShowDocumentDialog>

<style>
    .tz-mud-overlay {
        background: repeating-linear-gradient(135deg, #ccc, #ccc 10px, #aaa 10px, #aaa 20px) !important;
        opacity: 0.7 !important;
    }
</style>

<div style="@($"{_disableAttrString}")">
    <MudDialog Class="@($"tzModal")">
        <TitleContent>
            <div class="d-flex flex-row flex-grow-1 gap-4">
                <MudText Style="width: 45%;" Color=Color.Primary>
                    @((!FileValidator.IsPdf(Attachment.First().Value.MineType) &&
                        FileValidator.IsValiBytes(Attachment.First().Value.PdfConvertedContent)) ?
                        Attachment.First().Value.Name.Split(".")[0] + ".pdf" : Attachment.First().Value.Name)
                </MudText>
                <MudText Color=Color.Secondary>
                    @(Attachments.IndexOf(Attachments.First(x => x.Id == Attachment.First().Key)) + 1)
                </MudText>
                /
                <MudText Color=Color.Secondary>
                    @Attachments.Count()
                </MudText>
            </div>
        </TitleContent>
        <DialogContent>
            @if (_showImage)
            {
                <img id="avatar" style="height: calc(100vh - 200px); width: 600px; margin-left: auto;
                         margin-right: auto;
                         display: block;" />
            }
            else if (_showFile)
            {
                <object id="iframe" style="height: calc(100vh - 200px); width: 100%;">
                </object>
            }
        </DialogContent>
        <DialogActions>
            <MudTooltip ShowOnHover=@(!string.IsNullOrEmpty(Translate(SystemTextId.Download, "Download")))
                Placement="Placement.Top" Arrow="true" Color="Color.Primary">
                <ChildContent>
                    <MudIconButton Variant="Variant.Filled" Color=Color.Secondary Disabled="@(_disabledPage)"
                        Icon="@Icons.Material.Filled.CloudDownload" @onclick=" ()=> Download()">
                    </MudIconButton>
                </ChildContent>
                <TooltipContent>
                    <MudText>
                        @Translate(SystemTextId.Download, "Download");
                    </MudText>
                </TooltipContent>
            </MudTooltip>
            <MudTooltip ShowOnHover=@(!string.IsNullOrEmpty(_textBackwards)) Placement="Placement.Top" Arrow="true"
                Color="Color.Primary">
                <ChildContent>
                    <MudIconButton Variant="Variant.Filled" Color=Color.Primary
                        Disabled="@(_disabledPage || _disabledBackwards)" @onclick="@(() => Move(Direction.Backwards))"
                        Icon=@Icons.Material.Filled.ArrowBack>
                    </MudIconButton>
                </ChildContent>
                <TooltipContent>
                    <MudText>
                        @_textBackwards
                    </MudText>
                </TooltipContent>
            </MudTooltip>
            <MudTooltip ShowOnHover=@(!string.IsNullOrEmpty(_textForwards)) Placement="Placement.Top" Arrow="true"
                Color="Color.Primary">
                <ChildContent>
                    <MudIconButton Variant="Variant.Filled" Color=Color.Primary
                        Disabled="@(_disabledPage || _disabledForwards)" @onclick="@(() => Move(Direction.Forwards))"
                        Icon=@Icons.Material.Filled.ArrowForward>
                    </MudIconButton>
                </ChildContent>
                <TooltipContent>
                    <MudText>
                        @_textForwards
                    </MudText>
                </TooltipContent>
            </MudTooltip>
            <MudButton StartIcon="@Icons.Material.Filled.Close" Disabled="@(_disabledPage)"
                Color="Color.Default" OnClick="Cancel" Variant="Variant.Filled">
                <SystemText TextId="@SystemTextId.Close" FallbackText="Close"></SystemText>
            </MudButton>
        </DialogActions>
    </MudDialog>
</div>

<script>
    window.SetSource = async (elementId, stream, contentType, title, isImage) => {
        const arrayBuffer = await stream.arrayBuffer();
        let blobOptions = {};
        if (contentType) {
            blobOptions['type'] = contentType;
        }
        const blob = new Blob([arrayBuffer], blobOptions);
        const url = URL.createObjectURL(blob);
        const element = document.getElementById(elementId);
        element.title = title;
        element.onload = () => {
            URL.revokeObjectURL(url);
        }
        if (isImage) {
            element.src = url;
        } else {
            element.data = url + "#toolbar=0";
            element.type = contentType;
        }
    }
</script>
