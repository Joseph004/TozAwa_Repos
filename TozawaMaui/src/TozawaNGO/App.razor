@using ShareRazorClassLibrary.Services
@using TozawaNGO.Shared
@inject NavigationManager NavManager
@implements IDisposable

<Fluxor.Blazor.Web.StoreInitializer />
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (_isFirstloaded)
                    {
                        <p>You need to login to view this content</p>
                    }
                </NotAuthorized>
                <Authorizing>
                    <h1>Authorization in progress</h1>
                    <p>Only visible while authorization is in progress.</p>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <PageNotFound></PageNotFound>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private bool _isFirstloaded;
    [Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    protected override Task OnInitializedAsync()
    {
        _isFirstloaded = false;
        return Task.CompletedTask;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var context = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            if (context.User.Identity == null || !context.User.Identity.IsAuthenticated)
            {
                _isFirstloaded = true;
            }
            await Task.CompletedTask;
        }
    }
    public virtual void Dispose()
    {
    }

}